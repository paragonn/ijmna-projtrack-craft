{#
===============================================================================
    Image (image)

    Variables
        - Block (block)

    Fields:
        Content:
            - Image (image)
            - Videos (videos)

        Auxiliary:
            - Embed Video (embedVideo)

        Settings:
            - Content Width (contentWidth)
            - Container Size (headingSize)
            - Image Ratio (imageRatio)
            - Background Color (backgroundColor)
            - Overlay Opacity (overlayOpacity)
            - Overlay Gradient (overlayGradient)
            - Caption Alignment (captionAlignment)
===============================================================================
#}
{{ craft.app.config.general.devMode ? ('<!-- Template: ' ~ _self ~ ' -->') | raw }}
{% import "_/includes/macros" as render %}

{% set getMinusMarginTop = block.minusMarginTop.getValue()|default(null) %}
{% set getMinusMarginBottom = block.minusMarginBottom.getValue()|default(null) %}

{# Parent Block Fields Start #}
{% set parent = parent ?? null %}
{% set childContainer = childContainer ?? false %}
{% set sectionTag = childContainer ? 'div' : 'section' %}
{# Parent Block Fields End #}

{% set captionAlignment = block.captionAlignment.value|default('left') %}
{% set containerSize = block.containerSize.getValue()|default('container') %}
{% set contentWidth = block.contentWidth|default('0;12') %}

{% set conbackgroundColor = conbackgroundColor ?? null %}
{% set backgroundColorLabel = block.backgroundColor.label|default(conbackgroundColor ?? 'white') %}
{% set containerBgExist = conbackgroundColor != backgroundColorLabel %}
{% set backgroundColor = render.color({
    handle: backgroundColorLabel,
    minusMarginTop: getMinusMarginTop,
    minusMarginBottom: getMinusMarginBottom,
    swatch: 'background'
}) %}

{% set conOverlayOpacity = conOverlayOpacity ?? null %}
{% set overlayOpacity = block.overlayOpacity.getValue()|default(conOverlayOpacity ?? 'none') %}
{% set bgOpacity = render.setOpacity({
    opacity: overlayOpacity,
    opacityType: 'bg'
}) %}

{% set gradientColor = render.color({
    handle: backgroundColorLabel,
    swatch: 'gradient'
}) %}

{% set imageRatio = block.imageRatio.getValue()|default(parent == 'twoColumns' ? 'auto' : '16_9') %}
{% set ratio = {
    'auto'    : 'aspect-auto',
    '1_1'     : 'aspect-w-1 aspect-h-1',
    '16_9'    : 'aspect-w-16 aspect-h-9',
    '4_3'     : 'aspect-w-4 aspect-h-3',
    '3_4'     : 'aspect-w-3 aspect-h-4',
    '7_2'     : 'aspect-w-7 aspect-h-2'
} %}

{% set imageAnimation = render.setAnimation({
    animation: block.animation,
    animationStyle: block.animationStyle.value|default('fade-up'),
    animationDuration: block.animationDuration.value|default(1500),
    animationOffset: block.animationOffset.value|default(200),
    animationEasing: block.animationEasing.value|default(null)
}) | raw %}

{% set image = block.image.one() %}
{% set videos = block.videos.all() %}
{% set embedVideo = block.embedVideo %}

{% set addStickyClass = (getMinusMarginBottom|length and getMinusMarginBottom != 'none') or (getMinusMarginTop|length and getMinusMarginTop != 'none') ? 'z-[5] relative' %}

{% if image|length or videos|length or embedVideo|length %}
<{{ sectionTag }} id="{{ block.containerId|length ? block.containerId : 'block-' ~ block.getId() }}" class="{{ addStickyClass }} {{ not childContainer and containerSize == 'container' and contentWidth == '0;12' ? 'container' }} {{ containerSize == 'container' ? render.contentWidth({width: contentWidth}) }} {{ spacing.implode(' ') }} {{ containerBgExist ? backgroundColor }} {{ bgOpacity }} {{ containerBgExist and childContainer ? 'px-4 md:px-6' }}">
    <div class="{{ not childContainer ? 'container' }}">
        <div class="{{ containerSize == 'full' ? render.contentWidth({width: contentWidth}) }}">
            <div class="relative">
                <div class="h-full {{ ratio[imageRatio] }}" {{ imageAnimation|raw }}>
                    {{ render.renderVideo({
                        image: image|length ? image,
                        alt: image|length ? image.title,
                        width: image|length ? image.width,
                        height: image|length ? image.height,
                        class: "w-full h-full object-cover",
                        lazy: false,
                        videoLazy: false,
                        videos: videos,
                        embedVideos: embedVideo,
                        videoClass: "w-full h-full object-cover",
                        extraWrapperClasses: "z-10",
                        videoType: 'bgPopup',
                        videoPoster: image,
                        videoId: block.getId(),
                        videoAttrs: {
                            preload: "none",
                        }
                    }) }}
                </div>

                {% for item in block.overlayGradient %}
                    {% if item.getValue() == 'left' or item.getValue() == 'right' %}
                        <div class="to-transparent absolute h-full top-0 w-1/5 {{ item.getValue() == 'left' ? 'bg-gradient-to-r left-0' : (item.getValue() == 'right' ? 'bg-gradient-to-l right-0') }} {{ gradientColor }}"></div>
                    {% endif %}
                {% endfor %}
            </div>

            {% if block.caption|length %}
            <p class="text-lg mt-2 {{ containerSize == 'full' ? 'container' }} {{ render.getAlignment({alignment: captionAlignment, type: 'text'}) }} {{ render.foregroundColors({
                background: backgroundColorLabel,
                opacity: overlayOpacity,
                changeDefaultColor: true,
                type: 'heading',
            }) }}" {{ imageAnimation|raw }}>
                {{ block.caption }}
            </p>
            {% endif %}
        </div>
    </div>
</{{ sectionTag }}>
{% endif %}