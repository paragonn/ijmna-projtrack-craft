{#
===============================================================================
    Image + Content (imageContent)

    Variables
        - Block (block)

    Fields:
        Content [Image Content]:
            Content:
                - Image (image)
                - Eyebrow (eyebrow)
                - Heading (heading)
                - Text (text)
                - Buttons (buttons) [Matrix]
                    - Button Type (buttonType)
                    - Button Color (buttonColor)
                    - Icon (icon)
                    - Icon Position (iconPosition)
                    - Button (button)

            Auxiliary:
                - Embed Video (embedVideo)

        Auxiliary:
            - Eyebrow (eyebrow)
            - Heading (heading)
            - Text (text)
            - Buttons (buttons) [Matrix]
                - Button Type (buttonType)
                - Button Color (buttonColor)
                - Icon (icon)
                - Icon Position (iconPosition)
                - Button (button)

        Settings:
            - Content Width (contentWidth)
            - Image Content Layout (imageContentLayout)
            - Background Color (backgroundColor)
            - Overlay Opacity (overlayOpacity)
            - Image Ratio (imageRatio)
            - Image Position (imagePosition2)
            - Content Alignment (contentAlignment)
            - Slide Content Alignment (contentAlignment2)
            - Heading Size (headingSize)
            - Font Weight (fontWeight)
===============================================================================
#}
{{ craft.app.config.general.devMode ? ('<!-- Template: ' ~ _self ~ ' -->') | raw }}
{% import "_/includes/macros" as render %}

{% set headingTag = block.headingSize.getValue()|default('h3') %}
{% set fontWeight = block.fontWeight.getValue()|default('normal') %}
{% set contentAlignment = block.contentAlignment.value|default('center') %}
{% set contentSlideAlignment = block.contentAlignment2.value|default('left') %}
{% set overlayOpacity = block.overlayOpacity.getValue()|default('100') %}
{% set contentWidth = block.contentWidth|default('0;12') %}

{% set imageContentLayout = block.imageContentLayout.value|default('layout1') %}
{% set imagePositionLayou1 = block.imagePosition.getValue()|default('right') %}
{% set imagePositionLayou2 = block.imagePosition2.getValue()|default('right') %}

{% set backgroundColorLabel = block.backgroundColor.label|default('white') %}
{% set backgroundColor = render.color({
    handle: backgroundColorLabel,
    swatch: 'background'
}) %}

{% set contentBoxColorLabel = block.contentBoxColor.label|default('white') %}
{% set contentBoxColor = render.color({
    handle: contentBoxColorLabel,
    swatch: 'box-color'
}) %}

{% set bgOpacity = render.setOpacity({
    opacity: overlayOpacity,
    opacityType: 'bg'
}) %}

{% set contentAnimation = render.setAnimation({
    animation: block.animation,
    animationStyle: block.animationStyle.value|default('fade-left'),
    animationDuration: block.animationDuration.value|default(1500),
    animationOffset: block.animationOffset.value|default(200),
    animationEasing: block.animationEasing.value|default(null)
}) | raw %}

{% set imageAnimation = render.setAnimation({
    animation: block.animation,
    animationStyle: block.animationStyle2.value|default('fade-right'),
    animationDuration: block.animationDuration2.value|default(1500),
    animationOffset: block.animationOffset2.value|default(200),
    animationEasing: block.animationEasing2.value|default(null)
}) | raw %}

{% set buttons = block.buttons.all() %}
{% set imageContents = block.imageContent.all() %}

<section id="{{ block.containerId|length ? block.containerId : 'block-' ~ block.getId() }}" class="{{ spacing.implode(' ') }} {{ backgroundColor }} {{ bgOpacity }}">
    <div class="container">
        <div class="grid grid-cols-1 {{ render.contentWidth({width: contentWidth}) }}">
            <div>
                {% if block.eyebrow|length or block.heading|length or block.text|length %}
                <div class="mb-10 relative z-10 {{ render.getAlignment({alignment: contentAlignment, type: 'text'}) }}">
                    {{ render.basicContents({
                        eyebrow: block.eyebrow,
                        heading: block.heading,
                        text: block.text,
                        headingTag: headingTag,
                        headingSize: headingTag,
                        fontWeight: fontWeight,
                        eyebrowFontWeight: 'bold',
                        fontFamily: '',
                        overrideParagraphFontSize: 'text-lg',
                        backgroundColorLabel: backgroundColorLabel,
                        opacity: overlayOpacity,
                        contentAlignment: contentAlignment,
                        animation: block.animation,
                        contentAnimationStyle: block.animationStyle.value|default('fade-up'),
                        contentAnimationDuration: block.animationDuration.value|default(1500),
                        contentAnimationOffset: block.animationOffset.value|default(200),
                        contentAnimationEasing: block.animationEasing.value|default(null)
                    }) }}
                </div>
                {% endif %}

                {# Include Image Content #}
                {% include "_partials/pageBuilder/imageContent/#{imageContentLayout}" %}

                {% if buttons|length %}
                <div class="mt-10">
                    {{ render.basicContents({
                        buttons: buttons,
                        backgroundColorLabel: backgroundColorLabel,
                        opacity: overlayOpacity,
                        contentAlignment: contentAlignment,
                        animation: block.animation,
                        contentAnimationStyle: block.animationStyle.value|default('fade-up'),
                        contentAnimationDuration: block.animationDuration.value|default(1500),
                        contentAnimationOffset: block.animationOffset.value|default(200),
                        contentAnimationEasing: block.animationEasing.value|default(null)
                    }) }}
                </div>
                {% endif %}
            </div>
        </div>
    </div>
</section>

