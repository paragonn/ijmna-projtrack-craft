{#
===============================================================================
    Two Columns (twoColumns)

    Variables
        - Block (block)

    Fields:
        Content:
            Child:
                - Columns (columns)
                    - Basic Content
                    - Image

        Auxiliary:
            - Eyebrow (eyebrow)
            - Heading (heading)
            - Text (text)
            - Buttons (buttons) [Matrix]
                - Button Type (buttonType)
                - Button Color (buttonColor)
                - Icon (icon)
                - Icon Position (iconPosition)
                - Button (button)

        Settings:
            - Content Width (contentWidth)
            - Background Color (backgroundColor)
            - Overlay Opacity (overlayOpacity)
            - Column Layout (columnLayout)
            - Content Alignment (contentAlignment)
            - Heading Size (headingSize)
            - Font Weight (fontWeight)
===============================================================================
#}
{{ craft.app.config.general.devMode ? ('<!-- Template: ' ~ _self ~ ' -->') | raw }}
{% import "_/includes/macros" as render %}

{% set getMinusMarginTop = block.minusMarginTop.getValue()|default(null) %}
{% set getMinusMarginBottom = block.minusMarginBottom.getValue()|default(null) %}

{# Parent Block Fields Start #}
{% set parent = parent ?? null %}
{% set childContainer = childContainer ?? false %}
{% set sectionTag = childContainer ? 'div' : 'section' %}
{# Parent Block Fields End #}

{% set headingTag = block.headingSize.getValue()|default('h2') %}
{% set fontWeight = block.fontWeight.getValue()|default('normal') %}
{% set contentAlignment = block.contentAlignment.value|default('center') %}
{% set contentWidth = block.contentWidth|default('0;12') %}
{% set containerSize = block.containerSize.getValue()|default('full') %}
{% set columnsWidth = block.columnLayout.getValue()|default('6-6') %}
{% set columnAlignment = block.columnAlignment.getValue()|default('left') %}

{% set conbackgroundColor = conbackgroundColor ?? null %}
{% set backgroundColorLabel = block.backgroundColor.label|default(conbackgroundColor ?? 'white') %}
{% set containerBgExist = conbackgroundColor != backgroundColorLabel %}
{% set backgroundColor = render.color({
    handle: backgroundColorLabel,
    minusMarginTop: getMinusMarginTop,
    minusMarginBottom: getMinusMarginBottom,
    swatch: 'background'
}) %}

{% set conOverlayOpacity = conOverlayOpacity ?? null %}
{% set overlayOpacity = block.overlayOpacity.getValue()|default(conOverlayOpacity ?? 'none') %}
{% set bgOpacity = render.setOpacity({
    opacity: overlayOpacity,
    opacityType: 'bg'
}) %}

{% set buttons = block.buttons.all() %}
{% set childrens = block.columns.all() %}

{% set firstDiv = {
    '3-9' : 'lg:col-start-1 lg:col-end-4',
    '4-8' : 'lg:col-start-1 lg:col-end-5',
    '5-7' : 'lg:col-start-1 lg:col-end-6',
    '6-6' : 'lg:col-start-1 lg:col-end-7',
    '7-5' : 'lg:col-start-1 lg:col-end-8',
    '8-4' : 'lg:col-start-1 lg:col-end-9',
    '9-3' : 'lg:col-start-1 lg:col-end-10'
} %}

{% set lastDiv = {
    '3-9' : 'lg:col-start-4 lg:col-end-13',
    '4-8' : 'lg:col-start-5 lg:col-end-13',
    '5-7' : 'lg:col-start-6 lg:col-end-13',
    '6-6' : 'lg:col-start-7 lg:col-end-13',
    '7-5' : 'lg:col-start-8 lg:col-end-13',
    '8-4' : 'lg:col-start-9 lg:col-end-13',
    '9-3' : 'lg:col-start-10 lg:col-end-13'
} %}

{% set addStickyClass = (getMinusMarginBottom|length and getMinusMarginBottom != 'none') or (getMinusMarginTop|length and getMinusMarginTop != 'none') ? 'z-[5] relative' %}

<{{ sectionTag }} id="{{ block.containerId|length ? block.containerId : 'block-' ~ block.getId() }}" class="{{ addStickyClass }} {{ not childContainer and containerSize == 'container' and contentWidth == '0;12' ? 'container' }} {{ containerSize == 'container' ? render.contentWidth({width: contentWidth}) }} {{ spacing.implode(' ') }} {{ containerBgExist ? backgroundColor }} {{ bgOpacity }} {{ containerBgExist and childContainer ? 'px-9 md:px-24' }}">
    <div class="{{ not childContainer ? 'container' }}">
        <div class="grid grid-cols-1 {{ containerSize == 'full' ? render.contentWidth({width: contentWidth}) }}">
            {% if block.eyebrow|length or block.heading|length or block.text|length %}
            {{ render.basicContents({
                eyebrow: block.eyebrow,
                heading: block.heading,
                text: block.text,
                headingTag: headingTag,
                headingSize: headingTag,
                fontWeight: fontWeight,
                eyebrowFontWeight: 'bold',
                fontFamily: '',
                overrideParagraphFontSize: 'text-lg',
                backgroundColorLabel: backgroundColorLabel,
                opacity: overlayOpacity,
                contentAlignment: contentAlignment,
                animation: block.animation,
                contentAnimationStyle: block.animationStyle.value|default('fade-up'),
                contentAnimationDuration: block.animationDuration.value|default(1500),
                contentAnimationOffset: block.animationOffset.value|default(200),
                contentAnimationEasing: block.animationEasing.value|default(null)
            }) }}
            {% endif %}

            {% if childrens|length %}
            <div class="grid grid-cols-1 lg:grid-cols-12 gap-5 lg:gap-12 {{ render.getAlignment({alignment: columnAlignment, type: 'items'}) }} {{ block.eyebrow|length or block.heading|length or block.text|length ? 'mt-12' }}">
                {% for child in childrens %}
                <div class="{{ loop.first ? firstDiv[columnsWidth] : lastDiv[columnsWidth] }}">
                    {% include "_partials/blocks" with {
                        pageBuilder: child.column.all(),
                        parent: block.type.handle,
                        conbackgroundColor: backgroundColorLabel,
                        conOverlayOpacity: overlayOpacity,
                        childContainer: true,
                        firstBlockSpacing: {
                            'defaultMarginTop' : 'none',
                        },
                        lastBlockSpacing: {
                            'defaultMarginBottom' : 'none',
                        },
                    } %}
                </div>
                {% endfor %}
            </div>
            {% endif %}

            {% if buttons|length %}
            <div class="mt-10">
                {{ render.basicContents({
                    buttons: buttons,
                    backgroundColorLabel: backgroundColorLabel,
                    opacity: overlayOpacity,
                    contentAlignment: contentAlignment,
                    animation: block.animation,
                    contentAnimationStyle: block.animationStyle.value|default('fade-up'),
                    contentAnimationDuration: block.animationDuration.value|default(1500),
                    contentAnimationOffset: block.animationOffset.value|default(200),
                    contentAnimationEasing: block.animationEasing.value|default(null)
                }) }}
            </div>
            {% endif %}
        </div>
    </div>
</{{ sectionTag }}>