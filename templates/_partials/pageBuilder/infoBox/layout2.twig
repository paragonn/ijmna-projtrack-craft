{{ craft.app.config.general.devMode ? ('<!-- Template: ' ~ _self ~ ' -->') | raw }}
{% import "_/includes/macros" as render %}

<section id="{{ block.containerId|length ? block.containerId : 'block-' ~ block.getId() }}" class="{{ containerSize == 'container' and contentWidth == '0;12' ? 'container' }} {{ containerSize == 'container' ? render.contentWidth({width: contentWidth}) }} {{ backgroundColor }} {{ bgOpacity }} {{ spacing.implode(' ') }}">
    <div class="container">
        <div class="grid grid-cols-1 {{ containerSize == 'full' ? render.contentWidth({width: contentWidth}) }}">
            {% set borderLabel = ((backgroundColorLabel == borderColor and backgroundColorLabel != 'white' and contentBoxColorLabel != 'white') ? 'white' : (backgroundColorLabel in ['white'] and borderColor in ['white'] ? 'blue' : borderColor)) %}
            <div class="flex-1 w-full flex gap-3 px-2 py-4 {{ contentBoxColor }} {{ block.showBorder ? 'border-2' : '' }} {{ render.foregroundColors({
                background: borderLabel,
                opacity: overlayOpacity,
                changeDefaultColor: true,
                type: 'borderColor'
            }) }}">
                {% if block.icon|length %}
                <div class="{{ render.foregroundColors({
                    background: backgroundColorLabel,
                    opacity: overlayOpacity,
                    changeDefaultColor: true,
                    type: 'info-icon-color'
                }) }}" {{ contentAnimation|raw }}>
                    {{ svg(block.icon.path)|attr({
                        fill: 'currentColor',
                        class: 'w-28 h-28 ' ~ render.getAlignment({alignment: contentAlignment, type: 'margin'})
                    }) }}
                </div>
                {% endif %}

                {% if block.eyebrow|length or block.heading|length or block.text|length or buttons|length %}
                <div>
                    {{ render.basicContents({
                        eyebrow: block.eyebrow,
                        heading: block.heading,
                        text: block.text,
                        buttons: buttons,
                        headingTag: headingTag,
                        headingSize: headingTag,
                        fontWeight: fontWeight,
                        eyebrowFontWeight: 'bold',
                        fontFamily: '',
                        overrideParagraphFontSize: 'text-lg',
                        cardContentSpacing: 'mb-3',
                        backgroundColorLabel: contentBoxColorLabel == 'transparent' ? backgroundColorLabel : contentBoxColorLabel,
                        opacity: overlayOpacity,
                        contentAlignment: contentAlignment,
                        animation: block.animation,
                        contentAnimationStyle: block.animationStyle.value|default('fade-up'),
                        contentAnimationDuration: block.animationDuration.value|default(1500),
                        contentAnimationOffset: block.animationOffset.value|default(200),
                        contentAnimationEasing: block.animationEasing.value|default(null)
                    }) }}
                </div>
                {% endif %}
            </div>
            <div>
        </div>
    </div>
</section>