{% extends '_/layouts/main' %}
{% import "_/includes/macros" as render %}

{% set backgroundImage = entry.backgroundImage.one() %}
{% set bgVideos = entry.videos.all() %}
{% set heroImage = entry.heroImage.one() %}

{% set stageValue = entry.stage.getValue()|default(null) %}
{% set country = entry.country.level(1).one() %}
{% set jurisdictionsCaseTypes = entry.jurisdictionsCaseTypes %}
{% set buttons = entry.buttons.all() %}

{% set perRowLimit = entry.perRowLimit.getValue()|default('2') %}
{% set imagePosition = entry.imagePosition.getValue()|default('right') %}

{% set backgroundColorLabel = entry.backgroundColor.label|default('blue-800') %}
{% set backgroundColor = render.color({
    handle: backgroundColorLabel,
    swatch: 'background'
}) %}

{% set overlayOpacity = entry.overlayOpacity.getValue()|default(backgroundImage|length or bgVideos|length ? '80' : '100') %}
{% set bgOpacity = render.setOpacity({
    opacity: overlayOpacity,
    opacityType: 'bg'
}) %}

{% set rowLimit = {
    '2' : 'grid-cols-1 sm:grid-cols-2',
    '3' : 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-3',
    '4' : 'grid-cols-1 sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-4',
} %}

{% set getFirstBuilderBlock = entry.contentBuilder.one() %}
{% set getFirstBlockMinusMargin = getFirstBuilderBlock.minusMarginTop.getValue()|default(null) %}

{% block header %}
{% set headerLogo = header.logo.one() %}
{% set alternateLogo = header.altLogo.one() %}
{% set altLogo = alternateLogo|length ? alternateLogo : headerLogo %}
<header class="main-menu">
    <nav class="py-[11px] absolute w-full top-0 z-50 mobile-menu-bg transition-all duration-300">
        <div class="flex items-center justify-between shrink-0 w-full px-5">
            {% if altLogo|length %}
            <a href="{{ siteUrl }}" class="logo {{ backgroundColorLabel == 'white' ? 'text-blue-500' : 'text-white' }}">
                {{ render.setImage({
                    image: altLogo,
                    alt: altLogo.title,
                    fill: "currentColor",
                    class: "h-14"
                }) }}
            </a>
            {% endif %}

            <div class="block">
                <a href="{{ siteUrl }}" class="w-9 h-9 flex items-center justify-center">
                    <svg width="39" height="37" viewBox="0 0 39 37" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M2 2L35.4762 35.4762" stroke="{{ backgroundColorLabel == 'white' ? '#000204' : '#CFD0D3' }}" stroke-width="3" />
                        <path d="M37.1494 2L3.67323 35.4762" stroke="{{ backgroundColorLabel == 'white' ? '#000204' : '#CFD0D3' }}" stroke-width="3" />
                    </svg>
                </a>
            </div>
        </div>
    </nav>
</header>
{% endblock %}

{% block content %}
<section class="relative lg:min-h-[920px] lg:flex lg:items-center">
    {% if backgroundImage|length or bgVideos|length %}
        {{ render.renderVideo({
            image: backgroundImage|length ? backgroundImage,
            alt: backgroundImage|length ? backgroundImage.title,
            width: backgroundImage|length ? backgroundImage.width,
            height: backgroundImage|length ? backgroundImage.height,
            class: "object-cover w-full h-full absolute inset-0",
            lazy: false,
            videoLazy: false,
            videos: bgVideos,
            videoClass: "object-cover w-full h-full absolute inset-0",
            videoType: 'background',
            videoPoster: backgroundImage,
            videoId: entry.getId(),
            videoAttrs: {
                preload: "none",
            }
        }) }}
    {% endif %}
    <div class="inset-0 w-full h-full absolute {{ backgroundColor }} {{ bgOpacity }}"></div>

    <div class="container relative z-10 pt-[72px] md:pt-[168px] {{ (getFirstBlockMinusMargin != null or getFirstBlockMinusMargin != 'none') and getFirstBlockMinusMargin in ['large', 'extraLarge'] ? 'lg:pb-[180px] md:pb-[76px]' : 'lg:pb-[120px] md:pb-[76px]' }}">
        <div class="flex items-start flex-col gap-9 relative {{ not heroImage|length ? 'top-0 pb-16' : 'top-24 md:top-0' }} {{ imagePosition == 'left' ? 'md:flex-row-reverse' : 'md:flex-row' }}">
            <div class="w-full flex-1 {{ backgroundColorLabel == 'white' ? 'text-blue-800' : 'text-white' }}">
                {% if country|length %}
                <p class="uppercase tracking-widest {{ render.foregroundColors({
                    background: backgroundColorLabel,
                    opacity: overlayOpacity,
                    changeDefaultColor: true,
                    type: 'eyebrow',
                }) }}">
                    {{ 'Region: ' ~ country.title }}
                </p>
                {% endif %}

                <h1 class="text-4xl md:text-7xl font-Baskervville -tracking-wide mt-5">
                    {{ entry.title }}
                </h1>
                <div class="mt-12">
                    {% if stageValue != null or stageValue|length %}
                    <p class="text-lg uppercase font-bold tracking-widest">
                        <span class="{{ render.foregroundColors({
                            background: backgroundColorLabel,
                            opacity: overlayOpacity,
                            changeDefaultColor: true,
                            type: 'eyebrow',
                        }) }}">Stage:</span>
                        {{ stageValue }}
                    </p>
                    {% endif %}

                    {% if entry.stageByline|length %}
                    <p class="text-xs mt-2">
                        {{ entry.stageByline }}
                    </p>
                    {% endif %}

                    <div class="flex w-full mt-4">
                        <div class="{{ stageValue == 'jurisdictions-identified' ? 'active' }} h-[18px] relative flex-1 w-full first:after:hidden first:before:hidden after:absolute after:border-r after:border-white/40 after:h-[11px] after:-left-1 after:bg-blue-800 after:w-[9px] after:-rotate-45 after:top-[2px] before:absolute before:border-r before:border-white/40 before:h-3 before:-left-1 before:bg-blue-800 before:w-[9px] before:rotate-45 before:bottom-[2px] hr-progress hr-progress-target">
                            <div class="bg-blue-800 border border-white/40 h-full flex items-center justify-center w-full hr-progress-inner"></div>
                        </div>
                        <div class="{{ stageValue == 'teams-deployed' ? 'active' }} h-[18px] relative flex-1 w-full first:after:hidden first:before:hidden after:absolute after:border-r after:border-white/40 after:h-[11px] after:-left-1 after:bg-blue-800 after:w-[9px] after:-rotate-45 after:top-[2px] before:absolute before:border-r before:border-white/40 before:h-3 before:-left-1 before:bg-blue-800 before:w-[9px] before:rotate-45 before:bottom-[2px] hr-progress hr-progress-target">
                            <div class="bg-blue-800 border border-white/40 h-full flex items-center justify-center w-full hr-progress-inner"></div>
                        </div>
                        <div class="{{ stageValue == 'projects-ready' ? 'active' }} h-[18px] relative flex-1 w-full first:after:hidden first:before:hidden after:absolute after:border-r after:border-white/40 after:h-[11px] after:-left-1 after:bg-blue-800 after:w-[9px] after:-rotate-45 after:top-[2px] before:absolute before:border-r before:border-white/40 before:h-3 before:-left-1 before:bg-blue-800 before:w-[9px] before:rotate-45 before:bottom-[2px] hr-progress hr-progress-target">
                            <div class="bg-blue-800 border border-white/40 h-full flex items-center justify-center w-full hr-progress-inner"></div>
                        </div>
                        <div class="{{ stageValue == 'in-flight' ? 'active' }} h-[18px] relative flex-1 w-full first:after:hidden first:before:hidden after:absolute after:border-r after:border-white/40 after:h-[11px] after:-left-1 after:bg-blue-800 after:w-[9px] after:-rotate-45 after:top-[2px] before:absolute before:border-r before:border-white/40 before:h-3 before:-left-1 before:bg-blue-800 before:w-[9px] before:rotate-45 before:bottom-[2px] hr-progress hr-progress-target">
                            <div class="bg-blue-800 border border-white/40 h-full flex items-center justify-center w-full hr-progress-inner"></div>
                        </div>
                        <div class="{{ stageValue == 'landing' ? 'active' }} h-[18px] relative flex-1 w-full first:after:hidden first:before:hidden after:absolute after:border-r after:border-white/40 after:h-[11px] after:-left-1 after:bg-blue-800 after:w-[9px] after:-rotate-45 after:top-[2px] before:absolute before:border-r before:border-white/40 before:h-3 before:-left-1 before:bg-blue-800 before:w-[9px] before:rotate-45 before:bottom-[2px] hr-progress hr-progress-target">
                            <div class="bg-blue-800 border border-white/40 h-full flex items-center justify-center w-full hr-progress-inner"></div>
                        </div>
                        <div class="{{ stageValue == 'successful' ? 'active' }} h-[18px] relative flex-1 w-full first:after:hidden first:before:hidden after:absolute after:border-r after:border-white/40 after:h-[11px] after:-left-1 after:bg-blue-800 after:w-[9px] after:-rotate-45 after:top-[2px] before:absolute before:border-r before:border-white/40 before:h-3 before:-left-1 before:bg-blue-800 before:w-[9px] before:rotate-45 before:bottom-[2px] hr-progress hr-progress-target">
                            <div class="bg-blue-800 border border-white/40 h-full flex items-center justify-center w-full hr-progress-inner"></div>
                        </div>
                    </div>
                </div>

                {% if jurisdictionsCaseTypes|length %}
                <div class="grid gap-y-9 sm:gap-y-10 gap-3 items-end mt-14 {{ rowLimit[perRowLimit] }}">
                    {% for row in entry.jurisdictionsCaseTypes %}
                    <div>
                        {% if row.key|length %}
                        <p class="uppercase font-medium text-sm tracking-widest {{ render.foregroundColors({
                            background: backgroundColorLabel,
                            opacity: overlayOpacity,
                            changeDefaultColor: true,
                            type: 'eyebrow',
                        }) }}">
                            {{ row.key }}
                        </p>
                        {% endif %}

                        {% if row.value|length %}
                        <p class="font-bold text-lg tracking-widest uppercase">
                            {{ row.value }}
                        </p>
                        {% endif %}
                    </div>
                    {% endfor %}
                </div>
                {% endif %}

                {% if entry.quote|length or entry.quoteAttribution|length %}
                <div class="relative mt-12">
                    {% if entry.quote|length %}
                    <h3 class="text-2xl lg:text-3xl font-Baskervville -tracking-wide">
                        <span class="xl:absolute -left-5">“</span>
                        {{ entry.quote|nl2br ~ '”' }}
                    </h3>
                    {% endif %}

                    {% if entry.quoteAttribution|length %}
                        <p class="mt-3">{{ '- ' ~ entry.quoteAttribution }}</p>
                    {% endif %}
                </div>
                {% endif %}

                {% if buttons|length %}
                <div class="mt-8">
                    {{ render.basicContents({
                        buttons: buttons,
                        defaultButtonType: 'link',
                        backgroundColorLabel: backgroundColorLabel,
                        opacity: overlayOpacity,
                        contentAlignment: 'left'
                    }) }}
                </div>
                {% endif %}
            </div>

            {% if heroImage|length %}
            <div class="md:max-w-[440px] w-full flex-1">
                <div class="aspect-h-6 aspect-w-9 md:aspect-h-16 md:aspect-w-12">
                    {{ render.setImage({
                        image: heroImage,
                        alt: heroImage.title,
                        width: heroImage.width,
                        height: heroImage.height,
                        class: "w-full h-full object-cover",
                    }) }}
                </div>
            </div>
            {% endif %}
        </div>
    </div>
</section>

{#
=============================================
    Include page Builder
=============================================
#}
{% include "_partials/blocks" with {
    pageBuilder: entry.contentBuilder.all(),
    parent: entry.section.handle,
    heroExist: true
} %}

{# Footer CTA #}
{% set numberOfBlocks = entry.contentBuilder | length %}
{% set lastBlock = numberOfBlocks ? entry.contentBuilder[numberOfBlocks - 1] %}
{% set getLastBgColorLabel = 'white' %}
{% set getLastBgColor = null %}
{% set lastBgOpacity = null %}

{% if getLastBgColorLabel and lastBlock %}
    {% set getLastBgColorLabel = lastBlock.backgroundColor.label|default(conbackgroundColor ?? 'white') %}
    {% set getLastBgColor = render.color({
        handle: getLastBgColorLabel,
        swatch: 'background'
    }) %}

    {% set lastOverlayOpacity = lastBlock.overlayOpacity.getValue()|default('none') %}
    {% set lastBgOpacity = render.setOpacity({
        opacity: lastOverlayOpacity,
        opacityType: 'bg'
    }) %}
{% endif %}

<section class="{{ getLastBgColorLabel != 'white' ? 'py-14 lg:py-20' : 'my-16 lg:my-24' }} {{ getLastBgColor }} {{ lastBgOpacity }}">
    <div class="container">
        <div class="max-w-xl mx-auto bg-white border-2 border-blue-800 p-6 lg:p-12 text-center">
            <div>
                <p class="uppercase text-blue-500 tracking-widest text-base lg:text-lg">
                    Close CUrrent Jurisdiction
                </p>
                <h3 class="text-2xl lg:text-3xl font-Baskervville mt-3.5 mb-8">
                    Go back to Global Program Tracker
                </h3>
                <a href="{{ siteUrl }}">
                    <button class="text-blue-800 hover:text-blue-500 transition-all duration-300">
                        <svg width="39" height="37" viewBox="0 0 39 37" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M2 2L35.4762 35.4762" stroke="currentColor" stroke-width="3" />
                            <path d="M37.1494 2L3.67323 35.4762" stroke="currentColor" stroke-width="3" />
                        </svg>
                    </button>
                </a>
            </div>
        </div>
    </div>
</section>
{% endblock %}